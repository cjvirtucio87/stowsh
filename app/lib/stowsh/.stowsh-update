set -e;

### stowsh update
### [summary]
### stowsh subcommand for updating your dotfiles.
###
### [description]
### Update your dotfiles by copying them back from the $DOTFILES_DEPLOY_DIR to the $DOTFILES_PLATFORM of
### your git repo. Note that your dotfiles must already have been cloned using the stowsh install
### subcommand into a staging directory, and that this staging directory was not removed.
###
### [usage]
### - Execute with a log level of DEBUG:
### LOG_LEVEL=debug stowsh update

. "${PROJECT_DIR}/lib/stowsh/.stowsh-lib";

update() {
  local staging_dir;

  if [ -f "${CONFIG_PATH}/staging_dir" ]; then
    log_debug "using staging_dir ${staging_dir}";
    staging_dir="$(cat $CONFIG_PATH/staging_dir)";
  else
    log_error "no staging_dir file at ${CONFIG_PATH}/staging_dir";
    exit 1;
  fi

  local dest_dir="${staging_dir}/git/dotfiles/${DOTFILES_PLATFORM}";

  log_debug "copying dotfiles from ${dest_dir} back to ${DOTFILES_DEPLOY_DIR}";

  local excludes=()
  readarray -t patterns < "${staging_dir}/git/dotfiles/.gitignore"

  for pattern in "${patterns[@]}"; do
    if [[ !  "${pattern}" =~ ^# ]] && [[ -n "${pattern}" ]]; then
      excludes+=(--exclude "${pattern}")
    fi
  done

  deploy_dotfiles "${DOTFILES_DEPLOY_DIR}" "${dest_dir}" "${excludes[@]}";
}
